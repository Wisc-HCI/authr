<?xml version="1.0"?>
<launch>
    <arg name="simulated" default='false'/>
    <include file="$(find panda_moveit_config)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>
    <include file="$(find panda_moveit_config)/launch/move_group.launch">
      <!-- <arg name="load_robot_description" value="true"/> -->
      <arg name="allow_trajectory_execution" value="true"/>
      <arg name="fake_execution" value="true"/>
      <arg name="info" value="true"/>
    </include>
    <!-- include RVIZ until simulation is working -->
    <include if="$(arg simulated)" file="$(find panda_moveit_config)/launch/moveit_rviz.launch">
      <arg name="rviz_tutorial" value="false"/>
      <arg name="debug" value="false"/>
    </include>

    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world base_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_2" args="0 0 0 0 0 0 base_link panda_link0" />

    <!-- If simulated, we do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/source_list">['/move_group/fake_controller_joint_states']</rosparam>
    </node>

    <!-- Given the published joint states, publish tf for the robot links -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen"/>

</launch>
