%!PS-Adobe-2.0 EPSF-2.0
%%Title: zeno6eStoppingTime-hyper_{cost}.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Jul 25 16:02:44 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (zeno6eStoppingTime-hyper_{cost}.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Mostepha khouadjia)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jul 25 16:02:44 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
938 2050 M
6052 0 V
stroke
LTb
938 2050 M
-63 0 V
63 0 R
63 0 V
stroke
854 2050 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 2744 M
6052 0 V
stroke
LTb
938 2744 M
-63 0 V
63 0 R
63 0 V
stroke
854 2744 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.02)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 3151 M
6052 0 V
stroke
LTb
938 3151 M
-63 0 V
63 0 R
63 0 V
stroke
854 3151 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.03)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 3439 M
6052 0 V
stroke
LTb
938 3439 M
-63 0 V
63 0 R
63 0 V
stroke
854 3439 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.04)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 3663 M
6052 0 V
stroke
LTb
938 3663 M
-63 0 V
63 0 R
63 0 V
stroke
854 3663 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 4357 M
4477 0 V
1491 0 R
84 0 V
stroke
LTb
938 4357 M
-63 0 V
63 0 R
63 0 V
stroke
854 4357 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 4763 M
4477 0 V
1491 0 R
84 0 V
stroke
LTb
938 4763 M
-63 0 V
63 0 R
63 0 V
stroke
854 4763 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.15)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
938 448 M
0 4424 V
stroke
LTb
938 448 M
0 63 V
0 4361 R
0 -63 V
stroke
938 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1947 448 M
0 4424 V
stroke
LTb
1947 448 M
0 63 V
0 4361 R
0 -63 V
stroke
1947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2955 448 M
0 4424 V
stroke
LTb
2955 448 M
0 63 V
0 4361 R
0 -63 V
stroke
2955 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3964 448 M
0 4424 V
stroke
LTb
3964 448 M
0 63 V
0 4361 R
0 -63 V
stroke
3964 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4973 448 M
0 4424 V
stroke
LTb
4973 448 M
0 63 V
0 4361 R
0 -63 V
stroke
4973 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5981 448 M
0 3801 V
0 560 R
0 63 V
stroke
LTb
5981 448 M
0 63 V
0 4361 R
0 -63 V
stroke
5981 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4424 V
stroke
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
938 4872 N
938 448 L
6052 0 V
0 4424 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Hypervolume Indicator \(I)]
[(Helvetica) 112.0 -42.0 true true 0 (H)]
[(Helvetica) 89.6 14.0 true true 0 (-)]
[(Helvetica) 140.0 0.0 true true 0 (\))]
] -32.7 MCshow
grestore
LTb
LCb setrgbcolor
3964 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time \(seconds\))]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C LTb
6339 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (ibeaepsilon)]
] -46.7 MRshow
LT0
0.00 0.00 0.00 C 6423 4739 M
399 0 V
1039 4532 M
101 -324 V
101 -229 V
100 -173 V
101 -101 V
101 -170 V
101 -105 V
101 -97 V
101 -75 V
101 -95 V
101 -181 V
100 -154 V
101 -94 V
101 -106 V
101 -140 V
101 -31 V
101 -19 V
101 -68 V
100 -161 V
101 -36 V
101 -64 V
101 -63 V
101 -83 V
101 -39 V
101 -41 V
101 -7 V
100 -76 V
101 -15 V
101 -88 V
101 -17 V
101 -43 V
101 -18 V
101 -65 V
100 -10 V
101 -20 V
101 -104 V
101 0 V
101 -34 V
101 -11 V
101 -12 V
101 0 V
100 0 V
101 0 V
101 -47 V
101 -64 V
101 0 V
101 -81 V
101 -14 V
100 0 V
101 0 V
101 -14 V
101 -92 V
101 -16 V
101 -66 V
101 -36 V
101 -55 V
100 0 V
101 0 V
6889 680 L
101 0 V
1039 4532 TriDF
1140 4208 TriDF
1241 3979 TriDF
1341 3806 TriDF
1442 3705 TriDF
1543 3535 TriDF
1644 3430 TriDF
1745 3333 TriDF
1846 3258 TriDF
1947 3163 TriDF
2048 2982 TriDF
2148 2828 TriDF
2249 2734 TriDF
2350 2628 TriDF
2451 2488 TriDF
2552 2457 TriDF
2653 2438 TriDF
2754 2370 TriDF
2854 2209 TriDF
2955 2173 TriDF
3056 2109 TriDF
3157 2046 TriDF
3258 1963 TriDF
3359 1924 TriDF
3460 1883 TriDF
3561 1876 TriDF
3661 1800 TriDF
3762 1785 TriDF
3863 1697 TriDF
3964 1680 TriDF
4065 1637 TriDF
4166 1619 TriDF
4267 1554 TriDF
4367 1544 TriDF
4468 1524 TriDF
4569 1420 TriDF
4670 1420 TriDF
4771 1386 TriDF
4872 1375 TriDF
4973 1363 TriDF
5074 1363 TriDF
5174 1363 TriDF
5275 1363 TriDF
5376 1316 TriDF
5477 1252 TriDF
5578 1252 TriDF
5679 1171 TriDF
5780 1157 TriDF
5880 1157 TriDF
5981 1157 TriDF
6082 1143 TriDF
6183 1051 TriDF
6284 1035 TriDF
6385 969 TriDF
6486 933 TriDF
6587 878 TriDF
6687 878 TriDF
6788 878 TriDF
6889 680 TriDF
6990 680 TriDF
6622 4739 TriDF
1.000 UP
1.000 UL
LT0
0.20 0.80 0.20 C LTb
6339 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (ibeahyper)]
] -46.7 MRshow
LT0
0.20 0.80 0.20 C 6423 4599 M
399 0 V
-5783 -9 R
101 -311 V
101 -272 V
100 -141 V
101 -184 V
101 -150 V
101 -96 V
101 -166 V
101 -74 V
101 -105 V
101 -100 V
100 -59 V
101 -55 V
101 -117 V
101 -48 V
101 -53 V
101 -56 V
101 -90 V
100 -80 V
101 -62 V
101 -51 V
101 -64 V
101 -25 V
101 -58 V
101 -47 V
101 -198 V
100 -41 V
101 -28 V
101 -44 V
101 -53 V
101 -40 V
101 -16 V
101 -17 V
100 -130 V
101 -29 V
101 -10 V
101 -41 V
101 -10 V
101 -94 V
101 -90 V
101 -13 V
100 0 V
101 0 V
5376 986 L
101 -35 V
101 0 V
5679 810 L
101 0 V
100 -21 V
101 0 V
101 0 V
6183 680 L
101 -23 V
6385 504 L
101 0 V
101 0 V
100 -56 V
101 0 V
101 0 V
101 0 V
1039 4590 BoxF
1140 4279 BoxF
1241 4007 BoxF
1341 3866 BoxF
1442 3682 BoxF
1543 3532 BoxF
1644 3436 BoxF
1745 3270 BoxF
1846 3196 BoxF
1947 3091 BoxF
2048 2991 BoxF
2148 2932 BoxF
2249 2877 BoxF
2350 2760 BoxF
2451 2712 BoxF
2552 2659 BoxF
2653 2603 BoxF
2754 2513 BoxF
2854 2433 BoxF
2955 2371 BoxF
3056 2320 BoxF
3157 2256 BoxF
3258 2231 BoxF
3359 2173 BoxF
3460 2126 BoxF
3561 1928 BoxF
3661 1887 BoxF
3762 1859 BoxF
3863 1815 BoxF
3964 1762 BoxF
4065 1722 BoxF
4166 1706 BoxF
4267 1689 BoxF
4367 1559 BoxF
4468 1530 BoxF
4569 1520 BoxF
4670 1479 BoxF
4771 1469 BoxF
4872 1375 BoxF
4973 1285 BoxF
5074 1272 BoxF
5174 1272 BoxF
5275 1272 BoxF
5376 986 BoxF
5477 951 BoxF
5578 951 BoxF
5679 810 BoxF
5780 810 BoxF
5880 789 BoxF
5981 789 BoxF
6082 789 BoxF
6183 680 BoxF
6284 657 BoxF
6385 504 BoxF
6486 504 BoxF
6587 504 BoxF
6687 448 BoxF
6788 448 BoxF
6889 448 BoxF
6990 448 BoxF
6622 4599 BoxF
1.000 UP
1.000 UL
LT0
1.00 0.00 0.00 C LTb
6339 4459 M
[ [(Helvetica) 140.0 0.0 true true 0 (nsgaII)]
] -46.7 MRshow
LT0
1.00 0.00 0.00 C 6423 4459 M
399 0 V
1039 4872 M
101 -298 V
101 -133 V
100 -154 V
101 -97 V
101 -46 V
101 -77 V
101 -47 V
101 -47 V
101 -32 V
101 -23 V
100 -17 V
101 -39 V
101 -20 V
101 -39 V
101 -33 V
101 -16 V
101 -24 V
100 -39 V
101 -24 V
101 -18 V
101 -78 V
101 -36 V
101 -15 V
101 -49 V
101 -18 V
100 -11 V
101 -17 V
101 -17 V
101 -3 V
101 -39 V
101 -12 V
101 -24 V
100 -1 V
101 -48 V
101 -23 V
101 -19 V
101 -3 V
101 -13 V
101 -13 V
101 -2 V
100 -3 V
101 -2 V
101 -2 V
101 -2 V
101 -2 V
101 -8 V
101 -16 V
100 -9 V
101 -4 V
101 -4 V
101 0 V
101 -24 V
101 -16 V
101 -2 V
101 -4 V
100 -6 V
101 -4 V
101 -2 V
101 0 V
1039 4872 Star
1140 4574 Star
1241 4441 Star
1341 4287 Star
1442 4190 Star
1543 4144 Star
1644 4067 Star
1745 4020 Star
1846 3973 Star
1947 3941 Star
2048 3918 Star
2148 3901 Star
2249 3862 Star
2350 3842 Star
2451 3803 Star
2552 3770 Star
2653 3754 Star
2754 3730 Star
2854 3691 Star
2955 3667 Star
3056 3649 Star
3157 3571 Star
3258 3535 Star
3359 3520 Star
3460 3471 Star
3561 3453 Star
3661 3442 Star
3762 3425 Star
3863 3408 Star
3964 3405 Star
4065 3366 Star
4166 3354 Star
4267 3330 Star
4367 3329 Star
4468 3281 Star
4569 3258 Star
4670 3239 Star
4771 3236 Star
4872 3223 Star
4973 3210 Star
5074 3208 Star
5174 3205 Star
5275 3203 Star
5376 3201 Star
5477 3199 Star
5578 3197 Star
5679 3189 Star
5780 3173 Star
5880 3164 Star
5981 3160 Star
6082 3156 Star
6183 3156 Star
6284 3132 Star
6385 3116 Star
6486 3114 Star
6587 3110 Star
6687 3104 Star
6788 3100 Star
6889 3098 Star
6990 3098 Star
6622 4459 Star
1.000 UP
1.000 UL
LT0
0.55 0.00 0.55 C LTb
6339 4319 M
[ [(Helvetica) 140.0 0.0 true true 0 (spea2)]
] -46.7 MRshow
LT0
0.55 0.00 0.55 C 6423 4319 M
399 0 V
1039 4605 M
101 -238 V
101 -156 V
100 -93 V
101 -98 V
101 -67 V
101 -65 V
101 -97 V
101 -83 V
101 -86 V
101 -22 V
100 -24 V
101 -6 V
101 -54 V
101 -32 V
101 -94 V
101 -63 V
101 -1 V
100 -17 V
101 -51 V
101 -53 V
101 -43 V
101 -8 V
101 -20 V
101 -24 V
101 -25 V
100 -24 V
101 -2 V
101 -19 V
101 -24 V
101 -13 V
101 -7 V
101 -14 V
100 -11 V
101 -15 V
101 -4 V
101 -7 V
101 -5 V
101 -8 V
101 -34 V
101 -38 V
100 -2 V
101 -60 V
101 0 V
101 -2 V
101 -15 V
101 -2 V
101 0 V
100 0 V
101 -6 V
101 -9 V
101 -47 V
101 -9 V
101 -12 V
101 -16 V
101 -3 V
100 -3 V
101 0 V
101 -3 V
101 0 V
1039 4605 CircleF
1140 4367 CircleF
1241 4211 CircleF
1341 4118 CircleF
1442 4020 CircleF
1543 3953 CircleF
1644 3888 CircleF
1745 3791 CircleF
1846 3708 CircleF
1947 3622 CircleF
2048 3600 CircleF
2148 3576 CircleF
2249 3570 CircleF
2350 3516 CircleF
2451 3484 CircleF
2552 3390 CircleF
2653 3327 CircleF
2754 3326 CircleF
2854 3309 CircleF
2955 3258 CircleF
3056 3205 CircleF
3157 3162 CircleF
3258 3154 CircleF
3359 3134 CircleF
3460 3110 CircleF
3561 3085 CircleF
3661 3061 CircleF
3762 3059 CircleF
3863 3040 CircleF
3964 3016 CircleF
4065 3003 CircleF
4166 2996 CircleF
4267 2982 CircleF
4367 2971 CircleF
4468 2956 CircleF
4569 2952 CircleF
4670 2945 CircleF
4771 2940 CircleF
4872 2932 CircleF
4973 2898 CircleF
5074 2860 CircleF
5174 2858 CircleF
5275 2798 CircleF
5376 2798 CircleF
5477 2796 CircleF
5578 2781 CircleF
5679 2779 CircleF
5780 2779 CircleF
5880 2779 CircleF
5981 2773 CircleF
6082 2764 CircleF
6183 2717 CircleF
6284 2708 CircleF
6385 2696 CircleF
6486 2680 CircleF
6587 2677 CircleF
6687 2674 CircleF
6788 2674 CircleF
6889 2671 CircleF
6990 2671 CircleF
6622 4319 CircleF
1.000 UL
LTb
938 4872 N
938 448 L
6052 0 V
0 4424 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
